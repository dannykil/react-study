{
  "version": 3,
  "sources": ["../../../app/routes/stories.index.js"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/stories.index.js\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/stories.index.js\");\n  import.meta.hot.lastModified = \"1698986425756.2693\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Link, useLoaderData, Form, useTransition, unstable_useViewTransitionState } from \"@remix-run/react\";\nimport { createStory, getStories } from \"../lib/api\";\nexport const loader = async () => {\n  const stories = await getStories();\n  return json(stories);\n};\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n  const story = await createStory({\n    title,\n    body\n  });\n  //   return story;\n  return redirect(`/stories/${story.id}`);\n}\nexport default function Stories() {\n  _s();\n  const stories = useLoaderData();\n  const transition = unstable_useViewTransitionState();\n  return <div>\n      <h1>Stories</h1>\n      <ul>\n        {stories.map(story => <li key={story.id}>\n            <Link to={`/stories/${story.id}`}>{story.title}</Link>\n          </li>)}\n      </ul>\n      <Form method=\"post\">\n        <div style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 4,\n        width: 320\n      }}>\n          <input type=\"text\" name=\"title\" placeholder=\"\uC81C\uBAA9\uC744 \uC785\uB825\uD558\uC138\uC694...\" />\n          <textarea name=\"body\" placeholder=\"\uC774\uC57C\uAE30\uB97C \uC785\uB825\uD558\uC138\uC694...\" />\n          <button type=\"submit\">\n            {transition.state === \"submitting\" ? \"\uB4F1\uB85D \uC911...\" : \"\uB4F1\uB85D\"}\n          </button>\n        </div>\n      </Form>\n    </div>;\n}\n_s(Stories, \"DEgaWHBNoKZLGiLbGGdASh8cBis=\", false, function () {\n  return [useLoaderData];\n});\n_c = Stories;\nvar _c;\n$RefreshReg$(_c, \"Stories\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAA+B;AAyBzB;AA7CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6B;AAC7B,cAAY,IAAI,eAAe;AACjC;AAuBe,SAAR,UAA2B;AAChC,KAAG;AACH,QAAM,UAAU,cAAc;AAC9B,QAAM,aAAa,uBAAgC;AACnD,SAAO,mDAAC,SACJ;AAAA,uDAAC,QAAG,uBAAJ;AAAA;AAAA;AAAA;AAAA,WAAW;AAAA,IACX,mDAAC,QACE,kBAAQ,IAAI,WAAS,mDAAC,QACnB,6DAAC,QAAK,IAAI,YAAY,MAAM,MAAO,gBAAM,SAAzC;AAAA;AAAA;AAAA;AAAA,WAA+C,KADpB,MAAM,IAAf;AAAA;AAAA;AAAA;AAAA,WAEpB,CAAK,KAHT;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,mDAAC,QAAK,QAAO,QACX,6DAAC,SAAI,OAAO;AAAA,MACZ,SAAS;AAAA,MACT,eAAe;AAAA,MACf,KAAK;AAAA,MACL,OAAO;AAAA,IACT,GACI;AAAA,yDAAC,WAAM,MAAK,QAAO,MAAK,SAAQ,aAAY,0DAA5C;AAAA;AAAA;AAAA;AAAA,aAA2D;AAAA,MAC3D,mDAAC,cAAS,MAAK,QAAO,aAAY,gEAAlC;AAAA;AAAA;AAAA;AAAA,aAAkD;AAAA,MAClD,mDAAC,YAAO,MAAK,UACV,qBAAW,UAAU,eAAe,2BAAY,kBADnD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAVF;AAAA;AAAA;AAAA;AAAA,WAWA,KAZF;AAAA;AAAA;AAAA;AAAA,WAaA;AAAA,OApBG;AAAA;AAAA;AAAA;AAAA,SAqBL;AACJ;AACA,GAAG,SAAS,gCAAgC,OAAO,WAAY;AAC7D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,SAAS;AAE1B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
